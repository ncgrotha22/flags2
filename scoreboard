<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Retro Flag Game Scoreboard</title>
  <style>
    /* Retro scoreboard styling */
    :root{
      --bg:#0b0b0b;
      --accent:#0f0;
      --blackTeamBg:#0b0b0b;
      --whiteTeamBg:#f6f6f6;
      --border: #0f0;
      --retro-font: 'Courier New', monospace;
    }
    html,body{height:100%;margin:0;background:var(--bg);color:var(--accent);font-family:var(--retro-font);}
    .wrap{display:flex;flex-direction:column;align-items:center;justify-content:flex-start;padding:20px;gap:18px;}
    header{display:flex;align-items:center;justify-content:center;flex-direction:column;gap:6px;}
    h1{margin:0;font-size:2.1rem;letter-spacing:2px;}
    .top-row{display:flex;gap:20px;align-items:stretch;}
    .team-box{width:260px;height:140px;border:6px solid var(--border);display:flex;flex-direction:column;align-items:center;justify-content:center;border-radius:6px;}
    .team-box .label{font-size:0.95rem;opacity:0.9}
    .team-box .score{font-size:3.6rem;font-weight:700;margin-top:6px}
    .black-box{background:var(--blackTeamBg);color:var(--accent)}
    .white-box{background:var(--whiteTeamBg);color:#000}
    .center-msg{min-width:260px;display:flex;flex-direction:column;align-items:center;justify-content:center;}
    .center-msg .status{font-size:1.1rem;padding:6px 10px;border:3px solid var(--border);border-radius:4px;background:#111}
    .timer{margin-top:6px;font-size:1.0rem;}
    /* leaderboard table */
    .leaderboard{width:820px;border:6px solid var(--border);padding:10px;border-radius:6px;background:#0e0e0e}
    table{width:100%;border-collapse:collapse;color:var(--accent)}
    th,td{padding:8px 10px;text-align:left;border-bottom:1px dashed rgba(200,200,200,0.08);font-size:1.05rem}
    th{font-size:0.95rem;opacity:0.9}
    tr.leader{background:linear-gradient(90deg, rgba(255,255,255,0.03), rgba(255,255,255,0.01))}
    .rank-cell{font-weight:700;width:60px}
    .team-pill{display:inline-block;padding:4px 8px;border-radius:12px;font-size:0.9rem;border:2px solid rgba(255,255,255,0.08)}
    .team-pill.black{background:#000;color:#fff;border-color:#fff}
    .team-pill.white{background:#fff;color:#000;border-color:#000}
    /* small controls */
    .controls{display:flex;gap:8px;align-items:center}
    button{padding:8px 12px;border-radius:6px;border:0;background:#222;color:var(--accent);cursor:pointer}
    button.secondary{background:#444}
    .small{font-size:0.9rem}
    footer{color:#888;font-size:0.85rem;margin-top:10px}
    @media(max-width:900px){
      .leaderboard{width:100%}
      .top-row{flex-direction:column;align-items:center}
    }
  </style>
</head>
<body>
  <div class="wrap">
    <header>
      <h1>FLAG CAPTURE SCOREBOARD</h1>
      <div style="opacity:0.8;font-size:0.95rem">Black vs White — retro scoreboard</div>
    </header>

    <div class="top-row">
      <div class="team-box black-box">
        <div class="label">⚫ BLACK</div>
        <div id="blackScore" class="score">0</div>
      </div>

      <div class="center-msg">
        <div id="leaderText" class="status">Waiting for data...</div>
        <div class="timer" id="timerDisplay" style="display:none"></div>
        <div style="margin-top:8px" class="controls">
          <button id="refreshBtn" class="small">Refresh Now</button>
          <button id="fullscreenBtn" class="small secondary">Fullscreen</button>
        </div>
      </div>

      <div class="team-box white-box">
        <div class="label">⚪ WHITE</div>
        <div id="whiteScore" class="score">0</div>
      </div>
    </div>

    <div class="leaderboard" aria-live="polite">
      <table>
        <thead>
          <tr><th>Rank</th><th>Gamer Tag</th><th>Team</th><th>Flags Captured</th></tr>
        </thead>
        <tbody id="leaderBody">
          <tr><td colspan="4" style="opacity:0.6">Loading leaderboard...</td></tr>
        </tbody>
      </table>
    </div>

    <footer>Auto‑refresh every <span id="refreshIntervalLabel">10</span>s • Published Google Sheet must be public CSV</footer>
  </div>

<script>
const sheetUrl = "https://docs.google.com/spreadsheets/d/e/2PACX-1vTpIdxq0SCnPly4D7URzwg-z8DaVbrIpI4vb1oPcxR_JVg8klUeSh76w8v260ZttPPK5Y3GDvE6_VYq/pub?output=csv&gid=749829186";
const refreshSeconds = 10; // auto-refresh frequency in seconds

async function loadAndRender() {
  try {
    const resp = await fetch(sheetUrl, {cache:"no-store"});
    if(!resp.ok) throw new Error("Failed to fetch sheet");
    const txt = await resp.text();
    const rows = txt.trim().split("\n").map(r=>r.split(","));
    if(rows.length<2) throw new Error("No data found");

    const header = rows[0].map(h=>h.trim().toLowerCase());
    const idxGamer = header.indexOf("gamer tag");
    const idxTeam = header.indexOf("what team are you on?");
    const idxFlags = header.indexOf("flags captured");

    const data = rows.slice(1).map(r=>{
      return {
        gamer: r[idxGamer] || "",
        team: r[idxTeam] || "",
        flags: parseInt(r[idxFlags]||"0")||0
      };
    });

    data.sort((a,b)=>b.flags-a.flags);

    const blackTotal = data.filter(x=>x.team.toLowerCase().includes("black")).reduce((s,x)=>s+x.flags,0);
    const whiteTotal = data.filter(x=>x.team.toLowerCase().includes("white")).reduce((s,x)=>s+x.flags,0);
    document.getElementById("blackScore").textContent = blackTotal;
    document.getElementById("whiteScore").textContent = whiteTotal;

    const leaderText = document.getElementById("leaderText");
    if(blackTotal>whiteTotal) leaderText.textContent="⚫ BLACK is in the lead!";
    else if(whiteTotal>blackTotal) leaderText.textContent="⚪ WHITE is in the lead!";
    else leaderText.textContent="It’s a tie!";

    const tbody = document.getElementById("leaderBody");
    tbody.innerHTML = "";
    data.forEach((row,i)=>{
      const tr = document.createElement("tr");
      if(i===0) tr.style.background="rgba(255,255,255,0.05)";
      const teamClass = row.team.toLowerCase().includes("black")?"team-pill black":"team-pill white";
      tr.innerHTML=`<td class="rank-cell">${i+1}</td>
                    <td>${row.gamer}</td>
                    <td><span class="${teamClass}">${row.team}</span></td>
                    <td>${row.flags}</td>`;
      tbody.appendChild(tr);
    });

  } catch(err){
    console.error(err);
    document.getElementById("leaderBody").innerHTML=`<tr><td colspan="4" style="opacity:0.6">Error loading data</td></tr>`;
    document.getElementById("leaderText").textContent="Error loading scores";
  }
}

document.getElementById("refreshBtn").addEventListener("click", ()=>loadAndRender());
document.getElementById("fullscreenBtn").addEventListener("click", ()=>{
  if(!document.fullscreenElement) document.documentElement.requestFullscreen();
  else document.exitFullscreen();
});

loadAndRender();
setInterval(loadAndRender, refreshSeconds*1000);
</script>
</body>
</html>
